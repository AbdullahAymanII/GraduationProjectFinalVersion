spring.application.name=backend
spring.main.allow-circular-references=true


# ------------------------
# MySQL Database Configuration
# ------------------------

spring.datasource.url=jdbc:mysql://mysql_GP:3306/mysql_GP
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# ------------------------
# MongoDB Database Configuration
# ------------------------

#spring.data.mongodb.uri=mongodb://devroot:devroot@collaborative-mongo:27017/mongo_db?authSource=admin
#spring.data.mongodb.port=27017
#spring.data.mongodb.auto-index-creation=true


# ------------------------
# Hibernate JPA Settings
# ------------------------
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# ------------------------
# Connection Pool Settings
# ------------------------
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000

# ------------------------
# Logging Configuration
# ------------------------
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE


# Google OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-id=11584530617-0q3qjvpnath0ij4ojckdba6jj39disck.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.client-name=Google

# GitHub OAuth2 Client Configuration
spring.security.oauth2.client.registration.github.client-id=Ov23liC5eH6noIID6Fci
spring.security.oauth2.client.registration.github.client-secret=4057c62d34654c21996415ba2f184ddb81d32911
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.client-name=GitHub

# Google OAuth2 Provider Details
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# GitHub OAuth2 Provider Details
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user

# Set the root logger level to INFO and output logs to both console and a log file
logging.level.root=INFO
logging.file.name=logs/application.log

# Set specific logger levels (e.g., for your package or for global errors)
logging.level.com.collaborative.editor.service.fileService=DEBUG
logging.level.com.collaborative.editor.exception=ERROR
